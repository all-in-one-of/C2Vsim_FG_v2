(i-1)*4+1
i<-3
(i-1)*4+1
Ktemp$PKH[1]
Ktemp$PKH[5]
Ktemp$PKH[9]
View(1:4:30179*4)
View(0:4:30179*4)
View(1:4:30179*4)
View(1:4:30179*4+1)
View(0:4:30179*4+1)
length(0:4:30179*4+1)
length((0:4:30179*4)+1)
t<-1:3
t<-1:3:10
View(t)
1:3:10
seq(from = 1, to = 10, by = 3)
seq(from = 1, to = 30179*4, by = 4)
t<- seq(from = 1, to = 30179*4, by = 4)
length(t)
KXY <- matrix(data = NA, nrow = 30179, ncol = 4)
KZ <- matrix(data = NA, nrow = 30179, ncol = 4)
KXY[,1] <- Ktemp$PKH[seq(from = 1, to = 30179*4, by = 4)]
View(KXY)
KZ[,1] <- Ktemp$PL[seq(from = 1, to = 30179*4, by = 4)]
View(KZ)
for (i in 1:3) {
KXY[,1+i] <- Ktemp$ID[seq(from = 1, to = 30179*4, by = 4)+i]
KZ[,1+i] <- Ktemp$PV[seq(from = 1, to = 30179*4, by = 4)+i]
}
# load the required library
library(h5)
library(pracma)
# Define the paths
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
preproc_path <- paste0(c2vsim_path, "Preprocessor/")
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(preproc_path, "C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
NlinesSkip <- 105
strat <- read.table(file = paste0(preproc_path, "C2VSimFG_Stratigraphy.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "GSE", "A1", "L1", "A2", "L2", "A3", "L3", "A4", "L4"))
View(strat)
NlinesSkip <- 105
strat <- read.table(file = paste0(preproc_path, "C2VSimFG_Stratigraphy.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "GSE", "A1", "L1", "A2", "L2", "A3", "L3", "A4", "L4"))
# Convert feet to meter
strat[-1] <- strat[-1] * 0.3048
for(i in 1:4){
strat[[ paste0("L", as.character(i))]] <- strat[[ paste0("L", as.character(i))]] + strat[[ paste0("A", as.character(i))]]
}
strat$A1 <- NULL
strat$A2 <- NULL
strat$A3 <- NULL
strat$A4 <- NULL
strat$L1 = strat$GSE - strat$L1
strat$L2 = strat$L1 - strat$L2
strat$L3 = strat$L2 - strat$L3
strat$L4 = strat$L3 - strat$L4
NlinesSkip <- 142
nNodes <- 32537
MSH <- read.table(file = paste0(preproc_path, "C2VSimFG_Elements.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "nd1", "nd2", "nd3", "nd4", "S"))
elemArea <- vector(mode = "numeric", length = length(MSH[[1]]))
print("Calculate element areas...")
for (i in 1:length(MSH[[1]])){
x <- XY$X[as.integer(c(MSH[i,2:5]))]
y <- XY$Y[as.integer(c(MSH[i,2:5]))]
elemArea[i] <- polyarea(x,y)
}
View(elemArea)
sum(elemArea)
sum(elemArea)/(1000*1000)
print("Central Valley area")
print("Central Valley area", i)
print("Central Valley area" + i)
print("Central Valley area" + as.character(1))
print("Central Valley area" , as.character(1))
print(paste("Central Valley area" , as.character(1))
)
print(paste("Central Valley area" , as.character(1)), 3)
print(paste("Central Valley area" , as.character(1)), as.character(3))
print(paste("Central Valley area" , as.character(1))
}
print(paste("Central Valley area" , as.character(sum(elemArea)/(1000*1000))))
library(raster)
library(rgeos)
library(sp)
library(rgdal)
library(sp)
library(raster)
library(rgeos)
library(rgdal)
install.packages("sp")
library(sp)
library(raster)
library(rgeos)
library(rgdal)
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
## Saturated Hydraulic properties
NlinesSkip <- 455
nNodes <- 30179*4
Ktemp <- read.table(file = paste0(c2vsim_path, "Simulation/Groundwater/C2VSimFG_Groundwater1974.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "PKH", "PS", "PN", "PV", "PL"))
KXY <- matrix(data = NA, nrow = 30179, ncol = 4)
KZ <- matrix(data = NA, nrow = 30179, ncol = 4)
KXY[,1] <- Ktemp$PKH[seq(from = 1, to = 30179*4, by = 4)]
KZ[,1] <- Ktemp$PL[seq(from = 1, to = 30179*4, by = 4)]
for (i in 1:3) {
KXY[,1+i] <- Ktemp$ID[seq(from = 1, to = 30179*4, by = 4)+i]
KZ[,1+i] <- Ktemp$PV[seq(from = 1, to = 30179*4, by = 4)+i]
}
View(KXY)
library(pracma)
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
preproc_path <- paste0(c2vsim_path, "Preprocessor/")
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(preproc_path, "C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
dim(KXY)
dim(XY)
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(c2vsim_path, "Preprocessor/C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
## Saturated Hydraulic properties
NlinesSkip <- 455
nNodes <- 30179*4
Ktemp <- read.table(file = paste0(c2vsim_path, "Simulation/Groundwater/C2VSimFG_Groundwater1974.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "PKH", "PS", "PN", "PV", "PL"))
# KXY and KZ are the matrices with the horizontal and vertical hydrulic conductivity values [Nnodes x Nlayers]
KXY <- matrix(data = NA, nrow = 30179, ncol = 4)
KZ <- matrix(data = NA, nrow = 30179, ncol = 4)
KXY[,1] <- Ktemp$PKH[seq(from = 1, to = 30179*4, by = 4)]
KZ[,1] <- Ktemp$PL[seq(from = 1, to = 30179*4, by = 4)]
for (i in 1:3) {
KXY[,1+i] <- Ktemp$ID[seq(from = 1, to = 30179*4, by = 4)+i]
KZ[,1+i] <- Ktemp$PV[seq(from = 1, to = 30179*4, by = 4)+i]
}
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(c2vsim_path, "Preprocessor/C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
View(Ktemp)
1:3:10
Ktemp[seq(from = 1, to = 30179*4, by = 4),]
KKtemp <- Ktemp[seq(from = 1, to = 30179*4, by = 4),]
View(KKtemp)
S <- SpatialPointsDataFrame(coords = XY, data = Ktemp[seq(from = 1, to = 30179*4, by = 4),])
View(S)
getwd()
writeOGR(obj = S, dsn = "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/gis_data", layer = "Klay1", driver = "ESRI Shapefile")
library(sp)
library(raster)
library(rgeos)
library(rgdal)
writeOGR(obj = S, dsn = "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/gis_data", layer = "Klay1", driver = "ESRI Shapefile")
View(XY)
XY[,2:3]
XY[,1:3]
XY[,2:3]
S <- SpatialPointsDataFrame(coords = XY[,2:3], data = Ktemp[seq(from = 1, to = 30179*4, by = 4),])
writeOGR(obj = S, dsn = "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/gis_data", layer = "Klay1", driver = "ESRI Shapefile")
writeOGR(obj = S, dsn = "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/gis_data", layer = "Klay1", driver = "ESRI Shapefile")
# Paths
script_path = "F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/ERS_proj/"
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
# Kings elements subregions are defined in a spreadsheet
Kings <- read.csv(file = paste0(script_path, "KingsSubregions.csv"))
subreg_list <- factor(Kings$Subregion)
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
data_ids <- 15:53
agg_vec <- array(data = NA, dim = c(1056, length(data_ids), length(levels(subreg_list))))
length(data_ids)
i<-1
temp <- LWU_BDGinfo[hfileDataSets[data_ids[i]]]
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
library(h5)
library(sf)
library(pracma)
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
data_ids <- 15:53
agg_vec <- array(data = NA, dim = c(1056, length(data_ids), length(levels(subreg_list))))
temp <- LWU_BDGinfo[hfileDataSets[data_ids[i]]]
dim(temp)[2] == 0
temp_mat <- matrix(data = NA, nrow = dim(temp)[2], ncol = dim(temp)[1])
View(temp_mat)
for (j in 1:dim(temp)[1]) {
temp_mat[,j] <- temp[j,]
}
View(temp_mat)
View(hfileDataSets)
View(temp)
View(temp_mat)
dim(temp_mat)
agg_vec <- array(data = NA, dim = c(504, length(data_ids), length(levels(subreg_list))))
dim(agg_vec)
dim(temp)[1]
dim(temp)
i
j
j=1
el_ids <- which(Kings$Subregion == levels(subreg_list)[j], arr.ind = FALSE)
el_ids
temp[,el_ids]
View(temp[,el_ids])
dim(temp[,el_ids])
sum(temp[,el_ids])
apply(temp[,el_ids],2,sum)
dim(apply(temp[,el_ids],2,sum))
length(apply(temp[,el_ids],2,sum))
length(apply(temp[,el_ids],1,sum))
agg_vec[,j,i] <- apply(temp[,el_ids],1,sum)
script_path = "F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/ERS_proj/"
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
n
subreg_list <- factor(Kings$Subregion)
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
# Kings elements subregions are defined in a spreadsheet
Kings <- read.csv(file = paste0(script_path, "KingsSubregions.csv"))
subreg_list <- factor(Kings$Subregion)
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
data_ids <- 15:53
#agg_data <- matrix(data = NA, nrow = length(levels(subreg_list)), ncol = length(data_ids))
agg_vec <- array(data = NA, dim = c(504, length(data_ids), length(levels(subreg_list))))
for (i in 1:length(data_ids)) {
temp <- LWU_BDGinfo[hfileDataSets[data_ids[i]]]
if (dim(temp)[2] == 0)
next
for (j in 1:length(levels(subreg_list))){
el_ids <- which(Kings$Subregion == levels(subreg_list)[j], arr.ind = FALSE)
agg_vec[,j,i] <- apply(temp[,el_ids],1,sum)
}
#temp_mat <- matrix(data = NA, nrow = dim(temp)[2], ncol = dim(temp)[1])
#for (j in 1:dim(temp)[1]) {
#  temp_mat[,j] <- temp[j,]
#}
#for (j in 1:length(levels(subreg_list))) {
#  el_ids <- which(Kings$Subregion == levels(subreg_list)[j], arr.ind = FALSE)
#  agg_data[j,i] <- sum(temp_mat[el_ids,])
#}
}
i
j
dim(temp)
temp[,el_ids]
dim(agg_vec)
i
script_path = "F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/ERS_proj/"
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
# Kings elements subregions are defined in a spreadsheet
Kings <- read.csv(file = paste0(script_path, "KingsSubregions.csv"))
subreg_list <- factor(Kings$Subregion)
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
data_ids <- 15:53
#agg_data <- matrix(data = NA, nrow = length(levels(subreg_list)), ncol = length(data_ids))
agg_vec <- array(data = NA, dim = c(504, length(data_ids), length(levels(subreg_list))))
for (i in 1:length(data_ids)) {
i
temp <- LWU_BDGinfo[hfileDataSets[data_ids[i]]]
if (dim(temp)[2] == 0)
next
for (j in 1:length(levels(subreg_list))){
el_ids <- which(Kings$Subregion == levels(subreg_list)[j], arr.ind = FALSE)
agg_vec[,i,j] <- apply(temp[,el_ids],1,sum)
}
#temp_mat <- matrix(data = NA, nrow = dim(temp)[2], ncol = dim(temp)[1])
#for (j in 1:dim(temp)[1]) {
#  temp_mat[,j] <- temp[j,]
#}
#for (j in 1:length(levels(subreg_list))) {
#  el_ids <- which(Kings$Subregion == levels(subreg_list)[j], arr.ind = FALSE)
#  agg_data[j,i] <- sum(temp_mat[el_ids,])
#}
}
agg_vec[,1,1]
View(agg_vec[,1,1])
View(array(agg_vec[,1,1],c(12,504/12)))
apply(array(agg_vec[,1,1],c(12,504/12)),1,sum)
apply(array(agg_vec[,1,1],c(12,504/12)),2,sum)
length(apply(array(agg_vec[,1,1],c(12,504/12)),2,sum))
length(apply(array(agg_vec[,1,1],c(12,504/12)),1,sum))
length(apply(array(agg_vec[,1,1],c(12,504/12)),2,mean))
apply(array(agg_vec[,1,1],c(12,504/12)),2,mean)
View(apply(array(agg_vec[,1,1],c(12,504/12)),2,mean))
#write.csv(agg_df, file = paste0(script_path, "KingsLWU.csv"))
agg_data <- matrix(data = NA, nrow = 504/12, ncol = length(data_ids))
#write.csv(agg_df, file = paste0(script_path, "KingsLWU.csv"))
agg_data <- matrix(data = NA, nrow = 504/12, ncol = length(data_ids))
1973:2015
length(1973:2015)
dim(agg_vec[,1,1])
length(agg_vec[,1,1])
array(agg_vec[,1,1], c(12,504/12))
apply(array(agg_vec[,1,1], c(12,504/12)),2,mean)
apply(array(agg_vec[,1,1], c(12,504/12)),2,std)
apply(array(agg_vec[,1,1], c(12,504/12)),2,mean)
length(apply(array(agg_vec[,1,1], c(12,504/12)),2,mean))
agg_df <- data.frame(agg_data, row.names = levels(subreg_list))
agg_df <- data.frame(agg_data, row.names = 1973:2014)
View(agg_df)
for (i in 1:length(data_ids)) {
names(agg_df)[names(agg_df) == paste0("X", as.character(i))] <- strsplit(hfileDataSets[data_ids[i]], split = '/')[[1]][3]
}
length(levels(subreg_list))
dim(agg_vec)
length(data_ids)
apply(array(agg_vec[,1,1], c(12,504/12)),2,mean)
agg_df[,1] <- apply(array(agg_vec[,1,1], c(12,504/12)),2,mean)
i <-1
for (j in 1:length(data_ids))
agg_df[,j] <- apply(array(agg_vec[,j,i], c(12,504/12)),2,mean)
library(xlsx)
levels(subreg_list))
levels(subreg_list)
levels(subreg_list)[i]
i=1
j=1
for (j in 1:length(data_ids))
agg_df[,j] <- apply(array(agg_vec[,j,i], c(12,504/12)),2,mean)
i == 1
write.xlsx(x = agg_df, file = "KingsAnnualAvLWU", sheetName = levels(subreg_list)[i], append = FALSE)
write.xlsx(x = agg_df, file = "KingsAnnualAvLWU.xlsx", sheetName = levels(subreg_list)[i], append = FALSE)
getwd()
setwd(script_path)
getwd()
for (i in 1:length(levels(subreg_list))){
for (j in 1:length(data_ids))
agg_df[,j] <- apply(array(agg_vec[,j,i], c(12,504/12)),2,mean)
if (i == 1)
write.xlsx(x = agg_df, file = "KingsAnnualAvLWU.xlsx", sheetName = levels(subreg_list)[i], append = FALSE)
else
write.xlsx(x = agg_df, file = "KingsAnnualAvLWU.xlsx", sheetName = levels(subreg_list)[i], append = TRUE)
}
View(hfileDataSets)
temp <- LWU_BDGinfo[hfileDataSets[data_ids[3]]]
dim(temp)
library(h5)
library(sf)
library(pracma)
library(xlsx)
script_path = "F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/ERS_proj/"
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
preproc_path <- paste0(c2vsim_path, "Preprocessor/")
kern <- read_sf(paste0(script_path, "gis_data/Kern_only.shp"))
kern_geom <- st_geometry(kern)
setwd(script_path)
getwd()
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(preproc_path, "C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
NlinesSkip <- 142
nNodes <- 32537
MSH <- read.table(file = paste0(preproc_path, "C2VSimFG_Elements.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "nd1", "nd2", "nd3", "nd4", "S"))
quad_el <- which(MSH$nd4 != 0, arr.ind = FALSE)
tri_el <- which(MSH$nd4 == 0, arr.ind = FALSE)
cc <- matrix(data = 0, nrow = dim(MSH)[1], ncol = 2)
cc[quad_el,1] <- (XY$X[MSH$nd1[quad_el]] + XY$X[MSH$nd2[quad_el]] + XY$X[MSH$nd3[quad_el]] + XY$X[MSH$nd4[quad_el]])/4
cc[quad_el,2] <- (XY$Y[MSH$nd1[quad_el]] + XY$Y[MSH$nd2[quad_el]] + XY$Y[MSH$nd3[quad_el]] + XY$Y[MSH$nd4[quad_el]])/4
cc[tri_el,1] <- (XY$X[MSH$nd1[tri_el]] + XY$X[MSH$nd2[tri_el]] + XY$X[MSH$nd3[tri_el]])/3
cc[tri_el,2] <- (XY$Y[MSH$nd1[tri_el]] + XY$Y[MSH$nd2[tri_el]] + XY$Y[MSH$nd3[tri_el]])/3
kern_elems <- vector("list", dim(kern)[1])
for (i in 1:dim(kern)[1]) {
kern_elems[[i]] <- which(inpolygon(cc[,1], cc[,2], kern_geom[[i]][[1]][[1]][,1], kern_geom[[i]][[1]][[1]][,2]) == TRUE, arr.ind = FALSE)
}
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
dim(kern)[1]
#agg_data <- matrix(data = NA, nrow = dim(kern)[1], ncol = length(data_ids))
agg_vec <- array(data = NA, dim = c(504, length(data_ids), dim(kern)[1] ))
# Read data and aggregate per Kern region
data_ids <- 15:53
#agg_data <- matrix(data = NA, nrow = dim(kern)[1], ncol = length(data_ids))
agg_vec <- array(data = NA, dim = c(504, length(data_ids), dim(kern)[1] ))
dim(agg_vec)
View(kern_elems)
# Paths
script_path = "F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/ERS_proj/"
c2vsim_path <- "f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/C2VSimFG-BETA_PublicRelease/"
results_path <- paste0(c2vsim_path, "Results/")
preproc_path <- paste0(c2vsim_path, "Preprocessor/")
setwd(script_path)
# Read the Kern subregions
kern <- read_sf(paste0(script_path, "gis_data/Kern_only.shp"))
kern_geom <- st_geometry(kern)
NlinesSkip <- 90
nNodes <- 30179
XY <- read.table(file = paste0(preproc_path, "C2VSimFG_Nodes.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "X", "Y"))
NlinesSkip <- 142
nNodes <- 32537
MSH <- read.table(file = paste0(preproc_path, "C2VSimFG_Elements.dat"),
header = FALSE, sep = "", skip = NlinesSkip, nrows = nNodes,
quote = "",fill = TRUE,
col.names = c("ID", "nd1", "nd2", "nd3", "nd4", "S"))
quad_el <- which(MSH$nd4 != 0, arr.ind = FALSE)
tri_el <- which(MSH$nd4 == 0, arr.ind = FALSE)
cc <- matrix(data = 0, nrow = dim(MSH)[1], ncol = 2)
cc[quad_el,1] <- (XY$X[MSH$nd1[quad_el]] + XY$X[MSH$nd2[quad_el]] + XY$X[MSH$nd3[quad_el]] + XY$X[MSH$nd4[quad_el]])/4
cc[quad_el,2] <- (XY$Y[MSH$nd1[quad_el]] + XY$Y[MSH$nd2[quad_el]] + XY$Y[MSH$nd3[quad_el]] + XY$Y[MSH$nd4[quad_el]])/4
cc[tri_el,1] <- (XY$X[MSH$nd1[tri_el]] + XY$X[MSH$nd2[tri_el]] + XY$X[MSH$nd3[tri_el]])/3
cc[tri_el,2] <- (XY$Y[MSH$nd1[tri_el]] + XY$Y[MSH$nd2[tri_el]] + XY$Y[MSH$nd3[tri_el]])/3
# for each subregion find the mesh element ids
kern_elems <- vector("list", dim(kern)[1])
for (i in 1:dim(kern)[1]) {
kern_elems[[i]] <- which(inpolygon(cc[,1], cc[,2], kern_geom[[i]][[1]][[1]][,1], kern_geom[[i]][[1]][[1]][,2]) == TRUE, arr.ind = FALSE)
}
# Read L&WU Budget file
LWU_BDGinfo <- h5file(name =  paste0(results_path, "C2VSimFG_L&WU_ZBudget.hdf"), mode = "r")
hfileGroups <- list.groups(LWU_BDGinfo)
hfileDataSets <- list.datasets(LWU_BDGinfo)
# Read data and aggregate per Kern region
data_ids <- 15:53
#agg_data <- matrix(data = NA, nrow = dim(kern)[1], ncol = length(data_ids))
agg_vec <- array(data = NA, dim = c(504, length(data_ids), dim(kern)[1] ))
for (i in 1:length(data_ids)) {
temp <- LWU_BDGinfo[hfileDataSets[data_ids[i]]]
if (dim(temp)[2] == 0)
next
for (j in 1:dim(kern)[1]){
agg_vec[,i,j] <- apply(temp[,kern_elems[[j]]],1,sum)
}
#temp_mat <- matrix(data = NA, nrow = dim(temp)[2], ncol = dim(temp)[1])
#for (j in 1:dim(temp)[1]) {
#  temp_mat[,j] <- temp[j,]
#}
#for (j in 1:dim(kern)[1]) {
#  agg_data[j,i] <- sum(temp_mat[kern_elems[[j]],])
#}
}
view(agg_vec[,1,1])
View(agg_vec[,1,1])
agg_data <- matrix(data = NA, nrow = 504/12, ncol = length(data_ids))
agg_df <- data.frame(agg_data, row.names = 1973:2014)
View(agg_df)
for (i in 1:length(data_ids)) {
names(agg_df)[names(agg_df) == paste0("X", as.character(i))] <- strsplit(hfileDataSets[data_ids[i]], split = '/')[[1]][3]
}
dim(kern)[1]
for (i in 1:dim(kern)[1]){
for (j in 1:length(data_ids))
agg_df[,j] <- apply(array(agg_vec[,j,i], c(12,504/12)),2,mean)
if (i == 1)
write.xlsx(x = agg_df, file = "KernAnnualAvLWU.xlsx", sheetName = levels(subreg_list)[i], append = FALSE)
else
write.xlsx(x = agg_df, file = "KernAnnualAvLWU.xlsx", sheetName = levels(subreg_list)[i], append = TRUE)
}
kern$KernDistri
kern$KernDistri[1]
kern$KernDistri[2]
for (i in 1:dim(kern)[1]){
for (j in 1:length(data_ids))
agg_df[,j] <- apply(array(agg_vec[,j,i], c(12,504/12)),2,mean)
if (i == 1)
write.xlsx(x = agg_df, file = "KernAnnualAvLWU.xlsx", sheetName = kern$KernDistri[i], append = FALSE)
else
write.xlsx(x = agg_df, file = "KernAnnualAvLWU.xlsx", sheetName = kern$KernDistri[i], append = TRUE)
}
