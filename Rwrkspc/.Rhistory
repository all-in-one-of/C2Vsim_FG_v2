a=1
a = [1 2 3]
'a = [1 2 3]'
a <- (1, 2, 3)
help(movies)
data(package='ggplot2')
require(ggplot2)
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
data(package='ggplot2')
help(movies)
install.packages("ggplot2movies")
help(movies)
data(package='ggplot2')
help(movies)
help("diamonds")
help("mpg")
summary(mpg)
mympg <- mpg
View(mympg)
install.packages("hdf5r")
clear
View(mympg)
View(mympg)
x<-10
x
x(1)
x[1]
x[0]
x[2]
very.good <- 25
assign("test.test", 12)
test.test
test.test <- 250
test.test <- 250
test.test
assign("test.test",100)
my.env$test.test <- 200
myenv <- new.env()
my.env$test.test <- 200
myenv$test.test <- 200
View(myenv)
get("test.test",myenv)
myenv[["x"]]
myenv[["test.test"]]
10**2
34%%23
34%%34
34%%33
format(10^5, scientific = FALSE)
format(10^5, scientific = TRUE)
10%%3
10%%2
10%%3
10%/%3
12%%3
13%%3
10**5
11%%3
11%%5
11%%4
abs(4)
abs(-34)
log(2)
log10(2)
log(2,base = 10)
pi
options()
1/0
0/0
is.nan(0/0)
is.nan(0/1)
is.infinite(-1/0)
tr.tr < c(1 2 3 4)
tr.tr <- c(1 2 3 4)
tr.tr <- c(1, 2, 3, 4)
tr.tr[2]
length(tr.tr)
tr.tr[4]
tr.ts=3
m <- c(70L,80L)
m[1]
m[4] <- 50L
m[20] <- 70L
view(m)
viewer(m)
m
View(m,"test")
str <- c("mte", "wer","asd")
str(str)
view(str)
view(str,'test')
view(str,"test")
view(str,"test1")
str
s <- c("mte", "wer","asd")
view(s,"s")
view(s,"s")
View(m,"test")
View(s,"test")
view(s,"s")
view(s,"sss")
view(s, "sss")
View(s,"s")
view (s,"r")
View (s, "r")
is.numeric(m)
is.na(m)
v <- is.na(m)
sort(m)
mm <- sort(m)
v <- vector("numeric", length = 100)
View(v,"v")
sort.int(m,index.return = TRUE)
C = sort.int(m,index.return = TRUE)
View(C,"C")
C[["x"]]
C[["ix"]]
C[["ix"]][0]
C[["ix"]][1]
C[["ix"]][2]
C[["ix"]][1:3]
C[["ix"]][1:5]
vector(mode = numerical)
vector(mode = "numeric", length = 6)
vector(mode = "numeric", length = 6)*3
vector(mode = "numeric", length = 6)+3
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:4]
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:5]
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6]
as.integer(vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6])
b <- as.integer(vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6])
factor(c("X","X","Y","Y","Z","X"))
f<-factor(c("X","X","Y","Y","Z","X"))
f
str(f)
View(f,"f")
f
find("X")
f.find("X")
f[1]
f[2]
f[1][1]
as.numeric(f)
as.integer(f)
f<-factor(c("X","X","Y","Y","Z","X")), levels("Z","Y","W","X")
f<-factor(c("X","X","Y","Y","Z","X")), levels("Z","Y","W","X"),
f<-factor(c("X","X","Y","Y","Z","X"), levels("Z","Y","W","X"))
F.name <- c("c","v","g","r")
F.rank <- c(1,2,4,3)
F[1]
list("name", 12L, 123.2, "rank")
FF<-list("name", 12L, 123.2, "rank")
View(FF)
str(FF)
FF<-list(name = "Giork", rand = 12L, height = 123.2, surname = "rank")
str(FF)
FF[1]
FF[2]
FF.name
FF[name]
View(FF)
View(FF)
FF[["name"]]
FF[1:2]
FF[1:3]
typeof(FF[1:3])
typeof(FF[1])
typeof(FF[[1]])
typeof(FF[[2]])
typeof(FF[[1:2]])
typeof(FF[1:2])
typeof(FF[1:2])
typeof(FF[1])
typeof(FF[[1])
typeof(FF[[1]])
FF$height
FF[c("name", "rand")]
length(FF)
test.test <- 250
print(x)
print(test.test)
y = "Hello World"
"Hello World" -> z
z
x
test.test
c <-TRUE
i <- 123L
n <-1.23
c <- "ABC 123"
d <- as.Date("2001-02-03")
d
typeof(d)
l
c
i
n
d
f <- function(x){x+1}
f(2)
v <- c(1,2,3)
v
v[1]
v[[1]]
s <- 1:5
s
m <- matrix(data = 1:6,nrow=2,ncol=3)
m
a <- array(data = 1:8, dim=c(2,2,2))
a
a[0]
a[1]
a[4]
a[1][1][1]
a[1][1][2]
View(a,"a")
l <- lest (TRUE, 123L, 2.34, "abc")
l <- list (TRUE, 123L, 2.34, "abc")
l
l[1]
l[2]
categ <- c("Male","Female","Male","Male")
fctr <- factor(categ)
fctr
levels(fctr)
unclass(fctr)
unclass(fctr) -> t
t
t[1]
t[2]
t[3]
df <- data.frame(
Name = c("cat", "Dog", "Cow,", "Pig"),
HowMany = c(5, 10, 15, 20),
isPet = c(TRUE, TRUE, FALSE, FALSE)
)
df
view(df)
View(df,"df")
df[1,2]
df[1,1]
df[1, ]
df[2, ]
df$Name
df$HowMany
df[c(2,4),]
df[2:4,]
df[df$isPet == TRUE]
df[df$isPet == TRUE, ]
df[df$HowMany >= 15, ]
df[df$Name %in% "cat", ]
1_2
1+2
c(1,2,3)+c(2,4,6)
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
m
n <- matrix(1:6, 2,3)
n
m==n
require('sf')
identical(m,n)
install.packages("dplyr")
library("dplyr")
?View
exit
q()
pwd()
library(h5)
library(pracma)
pwd()
sqetwd("F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/Rwrkspc")
setwd("F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/Rwrkspc")
source('F:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/Rwrkspc/ExtractFlowField.R', echo=TRUE)
View(outer_fc)
length(outer_fc)
i=1
FCEL[i,]
FCEL[outer_fc[i],]
which(FCEL[outer_fc[i],]!=0)
tfc <- FCEL[outer_fc[i],]
tfc
iel <- which(tfc != 0)
iel
iel <- tfc[which(tfc != 0)]
iel
MSH[iel,]
MSH[iel,-5]
MSH[iel,5]
MSH[iel,-5]
MSH[iel,1:4]
FI <- hpart["/geodata/FI"]
View(FI)
which(FI == 3, arr.ind = TRUE)
dim(FI)
hFI <- hpart["/geodata/FI"]
FI = matrix(nrow = dim(hFI)[0], ncol = dim(hFI)[1])
FI = matrix(nrow = dim(hFI)[0], ncol = dim(hFI)[1])
FI = matrix(nrow = dim(hFI)[1], ncol = dim(hFI)[2])
hFI <- hpart["/geodata/FI"]
FI = matrix(nrow = dim(hFI)[1], ncol = dim(hFI)[2])
for (i in 1:dim(hFI)[2]) {
FI[,i] = hFI[,i]
}
View(FI)
View(abs(FI))
i=1
iel <- which(abs(FI) == outer_fc[i], arr.ind = TRUE )
iel
iel[1]
iel[2]
MSH[iel[1],]
MSH[iel[1],iel[2]]
XY[MSH[iel[1],iel[2]],]
MSH[iel[1],iel[2]]
MSH[iel[1],iel[2]][1]
XY[MSH[iel[1],iel[2]][1],]
XY[MSH[iel[1],iel[2]][1],]
XY[MSH[iel[1],iel[2]+1][1],]
iel[2]
View(MSH)
MSH[iel[1],]
i=1
iel <- which(abs(FI) == outer_fc[i], arr.ind = TRUE )
a <- XY[MSH[iel[1],iel[2]][1],]
a
MSH[iel[1],iel[2]+1][1] == 0 || iel[2] == 4
b <- XY[MSH[iel[1],iel[2]][1],]
b
a+b
(a+b)/2
nrmls[outer_fc[i],1:2]
nrmls[outer_fc[i],1:2] <- (a+b)/2
nrmls[outer_fc[i],1:2]
FI[iel]
iel
cc[iel[1],]
ccel = cc[iel[1],]
Norm(ccel - c)
i=1
iel <- which(abs(FI) == outer_fc[i], arr.ind = TRUE )
iel
a <- XY[MSH[iel[1],iel[2]][1],]
a
MSH[iel[1],iel[2]+1][1] == 0 || iel[2] == 4
b <- XY[MSH[iel[1],iel[2]][1],]
b
c <- (a+b)/2
c
nrmls[outer_fc[i],1:2] <- c
ccel <- cc[iel[1],]
FI[iel] < 0
nn <- ccel - c
nn
nn <- nn/sqrt(sum(nn^2))
sqrt(sum(nn^2))
nn
nrmls[outer_fc[i],3:4] <- nn
nrmls[outer_fc[i],]
dim(iel)
for (i in 1:length(outer_fc)) {
# Find the element and the outer face index
iel <- which(abs(FI) == outer_fc[i], arr.ind = TRUE )
if (dim(iel)[1] > 1){
print("More than one elements are found")
}
a <- XY[MSH[iel[1],iel[2]][1],]
if (MSH[iel[1],iel[2]+1][1] == 0 || iel[2] == 4){
b <- XY[MSH[iel[1], 1][1],]
}else{
b <- XY[MSH[iel[1],iel[2]][1],]
}
c <- (a+b)/2
nrmls[outer_fc[i],1:2] <- c
ccel <- cc[iel[1],]
# if the index is negative then the flow comes from outer to inside of element
if (FI[iel] < 0){
nn <- ccel - c
}else{
nn <- c - ccel
}
nn <- nn/sqrt(sum(nn^2))
nrmls[outer_fc[i],3:4] <- nn
}
View(nrmls)
selectTimes
vflow <- hpart["flowdata/VFLOW"]
hflow <- hpart["flowdata/HFLOW"]
## write selected data
for
length(selectTimes)
length(selectTimes)
selectTimes[1]
simTime[selectTimes[1]]
dim(vflow)
v <- vflow[,selectTimes[1],1]
View(v)
install.packages("xlsx")
library(xlsx)
vf <- data.frame()
View(vf)
vf$CX <- cc[,1]
vf["CX"] <- cc[,1]
cbind(vf, cc[,1])
vf <- data.frame(cc[,1])
View(vf)
vf <- data.frame(cc[,1],"CX" )
View(vf)
vf <- data.frame(cc)
View(vf)
vf <- data.frame("CX" = cc[,1])
View(vf)
vf["CY"] <- cc[,2]
View(vf)
selectTimes[i]
selectTimes[1]
simTime[selectTimes[1]]
vf <- data.frame("CX" = cc[,1])
vf["CY"] <- cc[,2]
for (i in 1:length(selectTimes)) {
vf[simTime[selectTimes[1]]] <- vflow[,selectTimes[i],1]
}
dim(vflow)
dim(cc)
i
temp <- vflow[,selectTimes[i],1]
dim(temp)
view(temp)
View(temp)
View(temp[,1])
vf[simTime[selectTimes[i]]] <- temp
vf[simTime[selectTimes[i]]] <- cc[,1]
[simTime[selectTimes[i]]
simTime[selectTimes[i]]
simTime[selectTimes[i]][1]
simTime[selectTimes[i]][1][1]
simTime[selectTimes[i]]
as.character(simTime[selectTimes[i]])
vf[as.character(simTime[selectTimes[i]])] <- cc[,1]
vf <- data.frame("CX" = cc[,1])
vf["CY"] <- cc[,2]
for (i in 1:length(selectTimes)) {
vf[as.character(simTime[selectTimes[i]])] <- vflow[,selectTimes[i],1]
}
hflow <- hpart["flowdata/HFLOW"]
hf <- data.frame("CX" = nrmls[,1])
hf <- data.frame("CY" = nrmls[,2])
hf <- data.frame("NX" = nrmls[,3])
hf <- data.frame("NY" = nrmls[,4])
vf["CY"] <- cc[,2]
for (i in 1:length(selectTimes)) {
hf[as.character(simTime[selectTimes[i]])] <- hflow[,selectTimes[i],1]
}
View(hf)
View(nrmls)
hf <- data.frame("CX" = nrmls[,1])
hf["CY"] <- nrmls[,2]
hf["NX"] <- nrmls[,3]
hf["NY"] <- nrmls[,4]
vf["CY"] <- cc[,2]
for (i in 1:length(selectTimes)) {
hf[as.character(simTime[selectTimes[i]])] <- hflow[,selectTimes[i],1]
}
View(hf)
pwd()
row.names
write.xlsx(vf, file = "flowData", sheetName = "Vertical")
write.xlsx(vf, file = "flowData.xlsx", sheetName = "Vertical")
write.xlsx(vf, file = "flowData.xlsx", sheetName = "Vertical")
write.xlsx(vf, file = "flowData.xls", sheetName = "Vertical")
write.csv(vf, file = "flowData.xls")
write.csv(vf, file = "flowData.csv")
write.csv(hf, file = "horflowData.csv")
