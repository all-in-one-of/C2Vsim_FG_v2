a=1
a = [1 2 3]
'a = [1 2 3]'
a <- (1, 2, 3)
help(movies)
data(package='ggplot2')
require(ggplot2)
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
data(package='ggplot2')
help(movies)
install.packages("ggplot2movies")
help(movies)
data(package='ggplot2')
help(movies)
help("diamonds")
help("mpg")
summary(mpg)
mympg <- mpg
View(mympg)
install.packages("hdf5r")
clear
View(mympg)
View(mympg)
x<-10
x
x(1)
x[1]
x[0]
x[2]
very.good <- 25
assign("test.test", 12)
test.test
test.test <- 250
test.test <- 250
test.test
assign("test.test",100)
my.env$test.test <- 200
myenv <- new.env()
my.env$test.test <- 200
myenv$test.test <- 200
View(myenv)
get("test.test",myenv)
myenv[["x"]]
myenv[["test.test"]]
10**2
34%%23
34%%34
34%%33
format(10^5, scientific = FALSE)
format(10^5, scientific = TRUE)
10%%3
10%%2
10%%3
10%/%3
12%%3
13%%3
10**5
11%%3
11%%5
11%%4
abs(4)
abs(-34)
log(2)
log10(2)
log(2,base = 10)
pi
options()
1/0
0/0
is.nan(0/0)
is.nan(0/1)
is.infinite(-1/0)
tr.tr < c(1 2 3 4)
tr.tr <- c(1 2 3 4)
tr.tr <- c(1, 2, 3, 4)
tr.tr[2]
length(tr.tr)
tr.tr[4]
tr.ts=3
m <- c(70L,80L)
m[1]
m[4] <- 50L
m[20] <- 70L
view(m)
viewer(m)
m
View(m,"test")
str <- c("mte", "wer","asd")
str(str)
view(str)
view(str,'test')
view(str,"test")
view(str,"test1")
str
s <- c("mte", "wer","asd")
view(s,"s")
view(s,"s")
View(m,"test")
View(s,"test")
view(s,"s")
view(s,"sss")
view(s, "sss")
View(s,"s")
view (s,"r")
View (s, "r")
is.numeric(m)
is.na(m)
v <- is.na(m)
sort(m)
mm <- sort(m)
v <- vector("numeric", length = 100)
View(v,"v")
sort.int(m,index.return = TRUE)
C = sort.int(m,index.return = TRUE)
View(C,"C")
C[["x"]]
C[["ix"]]
C[["ix"]][0]
C[["ix"]][1]
C[["ix"]][2]
C[["ix"]][1:3]
C[["ix"]][1:5]
vector(mode = numerical)
vector(mode = "numeric", length = 6)
vector(mode = "numeric", length = 6)*3
vector(mode = "numeric", length = 6)+3
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:4]
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:5]
vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6]
as.integer(vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6])
b <- as.integer(vector(mode = "numeric", length = 6)+3 + C[["ix"]][1:6])
factor(c("X","X","Y","Y","Z","X"))
f<-factor(c("X","X","Y","Y","Z","X"))
f
str(f)
View(f,"f")
f
find("X")
f.find("X")
f[1]
f[2]
f[1][1]
as.numeric(f)
as.integer(f)
f<-factor(c("X","X","Y","Y","Z","X")), levels("Z","Y","W","X")
f<-factor(c("X","X","Y","Y","Z","X")), levels("Z","Y","W","X"),
f<-factor(c("X","X","Y","Y","Z","X"), levels("Z","Y","W","X"))
F.name <- c("c","v","g","r")
F.rank <- c(1,2,4,3)
F[1]
list("name", 12L, 123.2, "rank")
FF<-list("name", 12L, 123.2, "rank")
View(FF)
str(FF)
FF<-list(name = "Giork", rand = 12L, height = 123.2, surname = "rank")
str(FF)
FF[1]
FF[2]
FF.name
FF[name]
View(FF)
View(FF)
FF[["name"]]
FF[1:2]
FF[1:3]
typeof(FF[1:3])
typeof(FF[1])
typeof(FF[[1]])
typeof(FF[[2]])
typeof(FF[[1:2]])
typeof(FF[1:2])
typeof(FF[1:2])
typeof(FF[1])
typeof(FF[[1])
typeof(FF[[1]])
FF$height
FF[c("name", "rand")]
length(FF)
test.test <- 250
print(x)
print(test.test)
y = "Hello World"
"Hello World" -> z
z
x
test.test
c <-TRUE
i <- 123L
n <-1.23
c <- "ABC 123"
d <- as.Date("2001-02-03")
d
typeof(d)
l
c
i
n
d
f <- function(x){x+1}
f(2)
v <- c(1,2,3)
v
v[1]
v[[1]]
s <- 1:5
s
m <- matrix(data = 1:6,nrow=2,ncol=3)
m
a <- array(data = 1:8, dim=c(2,2,2))
a
a[0]
a[1]
a[4]
a[1][1][1]
a[1][1][2]
View(a,"a")
l <- lest (TRUE, 123L, 2.34, "abc")
l <- list (TRUE, 123L, 2.34, "abc")
l
l[1]
l[2]
categ <- c("Male","Female","Male","Male")
fctr <- factor(categ)
fctr
levels(fctr)
unclass(fctr)
unclass(fctr) -> t
t
t[1]
t[2]
t[3]
df <- data.frame(
Name = c("cat", "Dog", "Cow,", "Pig"),
HowMany = c(5, 10, 15, 20),
isPet = c(TRUE, TRUE, FALSE, FALSE)
)
df
view(df)
View(df,"df")
df[1,2]
df[1,1]
df[1, ]
df[2, ]
df$Name
df$HowMany
df[c(2,4),]
df[2:4,]
df[df$isPet == TRUE]
df[df$isPet == TRUE, ]
df[df$HowMany >= 15, ]
df[df$Name %in% "cat", ]
1_2
1+2
c(1,2,3)+c(2,4,6)
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
m
n <- matrix(1:6, 2,3)
n
m==n
require('sf')
identical(m,n)
install.packages("dplyr")
library("dplyr")
?View
exit
q()
library(h5)
library(pracma)
library(xlsx)
# Simulation Time series
simTime <- seq.Date(from = as.Date("1973/10/30"),to = as.Date("2015/09/30"),by = "month")
# Select the times to export the flow field
#------------------------------------------------------------------------------------------------------------------------
# Modify the following as needed.
# At the moment extracts all Aprils after the year 2000
selectTimes <- which(as.numeric(format(simTime,"%Y")) >= 2000 & as.numeric(format(simTime,"%m")) == 4, arr.ind = TRUE)
# Load the flow field data from the PartTrackData.h5
hpart <- h5file(name =  "PartTrackData.h5", mode = "r")
hpartGroups <- list.groups(hpart)
hpartDataSets <- list.datasets(hpart)
XY <- hpart["/geodata/XY"]
MSH <- hpart["/geodata/MSH"]
# Calculate element barycenters
cc <- matrix(data = 0, nrow = dim(MSH)[1], ncol = 2)
quad_el <- which(MSH[,4] != 0, arr.ind = FALSE)
tri_el <- which(MSH[,4] == 0, arr.ind = FALSE)
x1 <- XY[MSH[quad_el,1],1]; y1 <- XY[MSH[quad_el,1],2]
x2 <- XY[MSH[quad_el,2],1]; y2 <- XY[MSH[quad_el,2],2]
x3 <- XY[MSH[quad_el,3],1]; y3 <- XY[MSH[quad_el,3],2]
x4 <- XY[MSH[quad_el,4],1]; y4 <- XY[MSH[quad_el,4],2]
cc[quad_el,1] <- (x1 + x2 + x3 +x4)/4
cc[quad_el,2] <- (y1 + y2 + y3 +y4)/4
x1 <- XY[MSH[tri_el,1],1]; y1 <- XY[MSH[tri_el,1],2]
x2 <- XY[MSH[tri_el,2],1]; y2 <- XY[MSH[tri_el,2],2]
x3 <- XY[MSH[tri_el,3],1]; y3 <- XY[MSH[tri_el,3],2]
cc[tri_el,1] <- (x1 + x2 + x3)/3
cc[tri_el,2] <- (y1 + y2 + y3)/3
setwd('f:/UCDAVIS/C2VSIM_FG_OR/C2Vsim_FG_v2/Rwrkspc/')
# Simulation Time series
simTime <- seq.Date(from = as.Date("1973/10/30"),to = as.Date("2015/09/30"),by = "month")
# Select the times to export the flow field
#------------------------------------------------------------------------------------------------------------------------
# Modify the following as needed.
# At the moment extracts all Aprils after the year 2000
selectTimes <- which(as.numeric(format(simTime,"%Y")) >= 2000 & as.numeric(format(simTime,"%m")) == 4, arr.ind = TRUE)
# Load the flow field data from the PartTrackData.h5
hpart <- h5file(name =  "PartTrackData.h5", mode = "r")
hpartGroups <- list.groups(hpart)
hpartDataSets <- list.datasets(hpart)
XY <- hpart["/geodata/XY"]
MSH <- hpart["/geodata/MSH"]
cc <- matrix(data = 0, nrow = dim(MSH)[1], ncol = 2)
quad_el <- which(MSH[,4] != 0, arr.ind = FALSE)
tri_el <- which(MSH[,4] == 0, arr.ind = FALSE)
x1 <- XY[MSH[quad_el,1],1]; y1 <- XY[MSH[quad_el,1],2]
x2 <- XY[MSH[quad_el,2],1]; y2 <- XY[MSH[quad_el,2],2]
x3 <- XY[MSH[quad_el,3],1]; y3 <- XY[MSH[quad_el,3],2]
x4 <- XY[MSH[quad_el,4],1]; y4 <- XY[MSH[quad_el,4],2]
cc[quad_el,1] <- (x1 + x2 + x3 +x4)/4
cc[quad_el,2] <- (y1 + y2 + y3 +y4)/4
x1 <- XY[MSH[tri_el,1],1]; y1 <- XY[MSH[tri_el,1],2]
x2 <- XY[MSH[tri_el,2],1]; y2 <- XY[MSH[tri_el,2],2]
x3 <- XY[MSH[tri_el,3],1]; y3 <- XY[MSH[tri_el,3],2]
cc[tri_el,1] <- (x1 + x2 + x3)/3
cc[tri_el,2] <- (y1 + y2 + y3)/3
FCEL <- hpart["/geodata/FCEL"]
nrmls <- matrix(data = 0, nrow = dim(FCEL)[1], ncol = 4)
inner_fc <- which(FCEL[,1] !=0 & FCEL[,2] !=0)
outer_fc <- which(FCEL[,1] ==0 | FCEL[,2] ==0)
nrmls[inner_fc,1] <- ( cc[FCEL[inner_fc,1],1] + cc[FCEL[inner_fc,2],1] )/2
nrmls[inner_fc,2] <- ( cc[FCEL[inner_fc,1],2] + cc[FCEL[inner_fc,2],2] )/2
dx <- cc[FCEL[inner_fc,2],1] - cc[FCEL[inner_fc,1],1]
dy <- cc[FCEL[inner_fc,2],2] - cc[FCEL[inner_fc,1],2]
ln <- sqrt(dx^2 + dy^2)
nrmls[inner_fc,3] <- dx/ln
nrmls[inner_fc,4] <- dy/ln
hFI <- hpart["/geodata/FI"]
FI = matrix(nrow = dim(hFI)[1], ncol = dim(hFI)[2])
for (i in 1:dim(hFI)[2]) {
FI[,i] = hFI[,i]
}
for (i in 1:length(outer_fc)) {
# Find the element and the outer face index
iel <- which(abs(FI) == outer_fc[i], arr.ind = TRUE )
if (dim(iel)[1] > 1){
print("More than one elements are found")
}
a <- XY[MSH[iel[1],iel[2]][1],]
if (MSH[iel[1],iel[2]+1][1] == 0 || iel[2] == 4){
b <- XY[MSH[iel[1], 1][1],]
}else{
b <- XY[MSH[iel[1],iel[2]][1],]
}
c <- (a+b)/2
nrmls[outer_fc[i],1:2] <- c
ccel <- cc[iel[1],]
# if the index is negative then the flow comes from outer to inside of element
if (FI[iel] < 0){
nn <- ccel - c
}else{
nn <- c - ccel
}
nn <- nn/sqrt(sum(nn^2))
nrmls[outer_fc[i],3:4] <- nn
}
vflow <- hpart["flowdata/VFLOW"]
hflow <- hpart["flowdata/HFLOW"]
vf <- data.frame("CX" = cc[,1])
vf["CY"] <- cc[,2]
for (i in 1:length(selectTimes)) {
vf[as.character(simTime[selectTimes[i]])] <- vflow[,selectTimes[i],1]
}
hf <- data.frame("CX" = nrmls[,1])
hf["CY"] <- nrmls[,2]
hf["NX"] <- nrmls[,3]
hf["NY"] <- nrmls[,4]
for (i in 1:length(selectTimes)) {
hf[as.character(simTime[selectTimes[i]])] <- hflow[,selectTimes[i],1]
}
write.csv(vf, file = "VERTflowData.csv")
write.csv(hf, file = "HORIZflowData.csv")
